language: python
group: travis_latest
dist: bionic
sudo: true

env:
    global:
        # prefix before commands - used for wine, there the prefix is "wine"
        - cPREFIX=""
        # command to launch python interpreter (its different on macOs, there we need python3)
        - cPYTHON="python"
        # command to launch pip (its different on macOs, there we need pip3)
        - cPIP="python -m pip"
        # switch off wine fix me messages
        - WINEDEBUG=fixme-all
        # mypy path
        - MYPYPATH="./lib_registry/3rd_party_stubs"
        # package name
        - PACKAGE_NAME="lib_registry"
        # the registered CLI Command
        - CLI_COMMAND="lib_registry"
        # the source file for rst_include (rebuild rst file includes)
        - RST_INCLUDE_SOURCE="./.docs/README_template.rst"
        # the target file for rst_include (rebuild rst file includes)
        - RST_INCLUDE_TARGET="./README.rst"
        # secure environment variable
        - secure: "AP9/YXcfQzCyGCOdgCqO8ryUAanXxQCD3v2oV8r4EYSi0cAZIPfTNayxVyDLkciLjyu5Sh55WbCD9Ky302AOcwLfdGEG30r2f/cckBzQxhtaRrMXWCnmMpiA9t1Xz42T+Zf9kXBeTAB7Tm8AUSAWYjipqk2XfE36a6/mY4htM5fqAWQ7oLn9zZZtL6Ow4LgHG8zhtebOYXrxQLZSnhogF3iFKiNIVurU7C0MJC0iLCJ7lR/u/XtQhcIZPLBMES2DFadQYx6AcNb+t76n11Bi6HuJyoHtyc1NqHiMR64rvohWmwLCFP5PLPD85xQyg0c51KvTqCf4FinEOGHzacRI/5NIOzhGiaDhEwvGPyvmOP0LMipS3T/tnD5woBY3bmbfpfUMzhTslQiCFXwMgpLdzkBj4bzRtf/ceTq8ymv7i6w+MMpirYOAXJ88V3+oEPDZ2jf2KfJqyB9GTIiuyq9Z/ySQLbWa1XtDjY0E8W5Di8Kbvd9bF9oQTIy7+ED5Qwg510TOmu+JJjrk4T63R8QpP4jxbgKZSHSbwEejyNiCn0VLumpenesNz5T06IdFFteliIA7MzG1DESoEEQxztvxSiXz8ly+7Gu8Oi58LbTB1MiEhuX7BjDA0HyzTGeXZ27Hp/V6MIaEnH2daGaAkE5QzKFc8BXPwLrFk8Cmtv+gCmo="  # CC_TEST_REPORTER_ID.secret
        - secure: "rOWm+1AesXyzdS4yG3rarQK2xVfyNK1LgnFSQDPHleUQn0/XgsnaTh5LZoZoiqSBjsaRclT/+QTBIJq32VQA3BZAbOV3sRHCXGttg0ws1hwP+YoPM+Ii57PlTCu+hYG4W+dgm3pIKi2zLxozmOsJV1oZlHny4/Zbdp+SFoMd9T2WMcHVCRywQUorDPkW+a4Py+XJT3Z6gWTuP8PzTU91glokkAuLky7B29qkHkwePEwO69yUBXNjfKZEtl0+J0XabNQe7PPIYZNoWiZBAg/N2xW7oCdunGIfyEKhnzIkVmMttXrs9JeGgIz6PPLRf6JLuH+NjeRDigu823NA0aaWD7GVOBUqPgsJRySo4v9eCXXo+z9NB5RqeYw2J+YZFVVrEdV9cZ4+WeP/OXls+zZqAUz44Hf0DYdktsUF45sh6ZawJIi6cRQrGLdRb9yvMUf4zFlz3/AzFHnl9mk3MY/8t/qKohIFnSKNmNYD+XINFQ5+jziXty0wgNRL4BOYj0XKjCKz5UicZr5QrGJEIGqB4F7OosvVQzq1uAvSWuyoQT7lZZEZeNbnsnxobS3RVQl0tg2/mVxppnjQWmZZgqudNA+BA+oZoXfGm5in6JPineqKBzfxW7zZ6ms5NDJ5YQoeJ2rOUPcZiQ5NnjCwMDC82AL7SKzGfmcsl1UWABgSMeg="  # PYPI_PASSWORD.secret


addons:
    apt:
        packages:
            - xvfb      # install xvfb virtual framebuffer - this we need for WINE
            - winbind   # needed for WINE

services:   			# start services
  - xvfb    			# is needed for WINE on headless installation

matrix:
    include:

    - os: windows
      if: true
      language: sh
      name: "Windows Python 3.8"

      # oddly a secure password under env: global: causes that choco fails
      # so we need to put the option : filter_secrets: false
      # this can be a security issue, check that You dont leak secrets here !
      filter_secrets: false
      before_install:
          - git clone https://github.com/bitranox/lib_bash.git /usr/local/lib_bash
          - chmod -R 0755 /usr/local/lib_bash
          - chmod -R +x /usr/local/lib_bash/*.sh
          - /usr/local/lib_bash/lib_retry.sh retry choco install python3
          - export PATH="/c/Python38:/c/Python38/Scripts:$PATH"
          - export BUILD_DOCS="False"
          - export DEPLOY_SDIST="False"
          - export DEPLOY_WHEEL="False"
          - export DEPLOY_TEST="False"
          - export MYPY_STRICT="True"   


    - os: linux
      arch: "amd64"
      if: true
      language: python
      python: "3.6"
      before_install:
          - export BUILD_DOCS="False"
          - export DEPLOY_SDIST="False"
          - export DEPLOY_WHEEL="False"
          - export DEPLOY_TEST="True"
          - export MYPY_STRICT="True"   

    - os: linux
      arch: "amd64"
      if: true
      language: python
      python: "3.7"
      before_install:
          - export BUILD_DOCS="False"
          - export DEPLOY_SDIST="False"
          - export DEPLOY_WHEEL="False"
          - export DEPLOY_TEST="True"
          - export MYPY_STRICT="True"   

    - os: linux
      arch: "amd64"
      if: true
      language: python
      python: "3.8"
      before_install:
          - export BUILD_DOCS="True"
          - export DEPLOY_SDIST="True"
          - export DEPLOY_WHEEL="True"
          - export DEPLOY_TEST="True"
          - export MYPY_STRICT="True"   

    - os: linux
      arch: "amd64"
      if: true
      language: python
      python: "3.8-dev"
      before_install:
          - export BUILD_DOCS="False"
          - export DEPLOY_SDIST="False"
          - export DEPLOY_WHEEL="False"
          - export DEPLOY_TEST="True"
          - export MYPY_STRICT="True"   

    - os: linux
      arch: "amd64"
      if: true
      language: python
      python: "pypy3"
      before_install:
          - export BUILD_DOCS="False"
          - export DEPLOY_SDIST="False"
          - export DEPLOY_WHEEL="False"
          - export DEPLOY_TEST="True"
          - export MYPY_STRICT="False"   

    - os: linux
      arch: "ppc64le"
      if: tag IS present
      language: python
      python: "3.8"
      before_install:
          - export BUILD_DOCS="False"
          - export DEPLOY_SDIST="False"
          - export DEPLOY_WHEEL="True"
          - export DEPLOY_TEST="True"
          - export MYPY_STRICT="True"   

    - os: linux
      arch: "s390x"
      if: tag IS present
      language: python
      python: "3.8"
      before_install:
          - export BUILD_DOCS="False"
          - export DEPLOY_SDIST="False"
          - export DEPLOY_WHEEL="True"
          - export DEPLOY_TEST="True"
          - export MYPY_STRICT="True"   

    - os: linux
      arch: "arm64"
      if: tag IS present
      language: python
      python: "3.8"
      before_install:
          - export BUILD_DOCS="False"
          - export DEPLOY_SDIST="False"
          - export DEPLOY_WHEEL="True"
          - export DEPLOY_TEST="True"
          - export MYPY_STRICT="True"   

    - os: osx
      if: true
      language: sh
      name: "macOS 10.15.4"
      python: "3.8"
      osx_image: xcode11.5
      env:
        # on osx pip and python points to python 2.7 - therefore we have to use pip3 and python3 here
        - cPREFIX=""				# prefix before commands - used for wine, there the prefix is "wine"
        - cPYTHON="python3"			# command to launch python interpreter (its different on macOs, there we need python3)
        - cPIP="python3 -m pip"   	# command to launch pip (its different on macOs, there we need pip3)
        - export BUILD_DOCS="False"
        - export DEPLOY_SDIST="False"
        - export DEPLOY_WHEEL="False"
        - export DEPLOY_TEST="True"
        - export MYPY_STRICT="True"   


install:
    - ${cPIP} install lib_travis
    - log_util --colortest
    - lib_travis install

script:
    - BRANCH=$(lib_travis get_branch)
    - log_util --level=NOTICE --banner "working on branch ${BRANCH}"
    - lib_travis script

after_success:
    - lib_travis after_success
    - lib_travis deploy
    - ls -l ./dist

notifications:
  email:
    recipients:
        - bitranox@gmail.com
    # on_success default: change
    on_success: never
    on_failure: always
